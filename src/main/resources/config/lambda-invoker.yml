enabled: ${lambda-invoker.enabled:true}
functions: ${lambda-invoker.functions:}
region: ${lambda-invoker.region:}
endpointOverride: ${lambda-invoker.endpointOverride:}
logType: ${lambda-invoker.logType:Tail}
# When LambdaFunctionInvoker is used to invoke the downstream Lambda Function, it can collect the metrics info
# for the total response time of the downstream function. With this value injected, users can quickly determine
# how much time the downstream API spends, including the network latency. By default, it is true, and metrics will
# be collected and injected into the metrics middleware configured in the chain.
metricsInjection: ${lambda-invoker.metricsInjection:true}
# When the metrics info is injected into the metrics middleware, we need to pass a metric name to it so that the
# metrics info can be categorized in a tree structure under the name. By default, it is lambda-response, and users
# can change it.
metricsName: ${lambda-invoker.metricsName:lambda-response}
